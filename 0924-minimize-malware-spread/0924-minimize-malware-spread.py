class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        def find(x):
            if parent[x] != x: parent[x] = find(parent[x])
            return parent[x]
        def union(x, y):
            parent[find(x)] = find(y)
        n = len(graph)
        parent = list(range(n))
        for i in range(n):
            for j in range(i+1, n):
                if graph[i][j] == 1:
                    union(i, j)
        area = Counter(find(i) for i in range(n))
        malware = Counter(find(i) for i in initial)
        return min(initial, key=lambda i: [(malware[find(i)] == 1) * -area[find(i)], i])